name: Xcepto .NET release pipeline
on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: start services
        run: |
          cd Samples/Shopping && docker compose -f docker-compose.yaml up -d

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4

      - name: run tests
        run: dotnet test
        env:
          RABBITMQ_URL: localhost

      - name: stop services
        run: |
          cd Samples/Shopping && docker compose -f docker-compose.yaml down

  publish:
    needs: [tests]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - Xcepto/Xcepto.csproj
          - Xcepto.Rest/Xcepto.Rest.csproj
          - Xcepto.RabbitMQ/Xcepto.RabbitMQ.csproj

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Version
        id: vars
        run: echo "VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Create a new tag
        run: |
          # Generate a new tag name
          TAG_NAME="${GITHUB_RUN_NUMBER}"
          echo "TAG=$TAG_NAME" >> $GITHUB_ENV

          # Create a tag and push it
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $TAG
          release_name: Release v$VERSION
          body: |
            No release notes
          draft: false
          prerelease: false

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        
      - name: Restore
        run: dotnet restore ${{ matrix.project }}

      - name: Build
        run: dotnet build ${{ matrix.project }} --configuration Release --no-restore -p:Version=$VERSION

      - name: Pack
        run: dotnet pack ${{ matrix.project }} --configuration Release --no-build --output ./nupkg -p:Version=$VERSION

      - name: Push to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json